import io;
import Quicksort;

CompileIntArrayExample extends Quicksort  {


.field public intArrayField.array.i32;
.field public index.i32;
.field public assignedValue.i32;

.construct CompileIntArrayExample().V {
    invokespecial(this, "<init>").V;
}

.method public updateArrayElement(intArrayField.array.i32).i32 {
   index.i32 :=.i32 0.i32;

   value.i32 :=.i32 1.i32;

   tmp0.array.i32 :=.array.i32 new(array, 2.i32).array.i32;
intArrayField.array.i32 :=.array.i32 tmp0.array.i32;

   intArrayField[index.i32].i32 :=.i32 value.i32;

   tmp1.i32 :=.i32 intArrayField.array.i32[index.i32].i32;
ret.i32 tmp1.i32;
}

}