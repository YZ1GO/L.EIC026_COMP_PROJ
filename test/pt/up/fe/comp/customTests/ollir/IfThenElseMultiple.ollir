MyClass {



.construct MyClass().V {
    invokespecial(this, "<init>").V;
}

.method public func(a.i32, b.i32, c.i32, d.i32).i32 {
   tmp0.bool :=.bool a.i32 <.bool b.i32;
if (tmp0.bool) goto then1;
andTmp0.bool :=.bool 0.bool;
goto endif1;
then1:
tmp1.bool :=.bool a.i32 <.bool c.i32;

andTmp0.bool :=.bool tmp1.bool;
endif1:

if (andTmp0.bool) goto then2;
andTmp1.bool :=.bool 0.bool;
goto endif2;
then2:
tmp2.bool :=.bool a.i32 <.bool d.i32;

andTmp1.bool :=.bool tmp2.bool;
endif2:
if (andTmp1.bool) goto then0;
tmp3.bool :=.bool b.i32 <.bool a.i32;

if (tmp3.bool) goto then4;
andTmp2.bool :=.bool 0.bool;
goto endif4;
then4:
tmp4.bool :=.bool b.i32 <.bool c.i32;
andTmp2.bool :=.bool tmp4.bool;
endif4:
if (andTmp2.bool) goto then5;
andTmp3.bool :=.bool 0.bool;
goto endif5;
then5:
tmp5.bool :=.bool b.i32 <.bool d.i32;
andTmp3.bool :=.bool tmp5.bool;
endif5:
if (andTmp3.bool) goto then3;
tmp6.bool :=.bool c.i32 <.bool a.i32;
if (tmp6.bool) goto then7;
andTmp4.bool :=.bool 0.bool;
goto endif7;
then7:
tmp7.bool :=.bool c.i32 <.bool b.i32;
andTmp4.bool :=.bool tmp7.bool;
endif7:
if (andTmp4.bool) goto then8;
andTmp5.bool :=.bool 0.bool;
goto endif8;
then8:
tmp8.bool :=.bool c.i32 <.bool d.i32;
andTmp5.bool :=.bool tmp8.bool;
endif8:
if (andTmp5.bool) goto then6;
res.i32 :=.i32 d.i32;
goto endif6;
then6:
res.i32 :=.i32 c.i32;
endif6:
goto endif3;
then3:
res.i32 :=.i32 b.i32;
endif3:
goto endif0;
then0:
res.i32 :=.i32 a.i32;
endif0:

   ret.i32 res.i32;
}

}