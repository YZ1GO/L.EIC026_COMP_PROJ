import ioPlus;

ComplexArrayAccess {




.construct ComplexArrayAccess().V {
    invokespecial(this, "<init>").V;
}

.method public func(a.i32).i32 {
   ret.i32 a.i32;
}

.method public static main(args.array.String).V {
   tmp0.ComplexArrayAccess :=.ComplexArrayAccess new(ComplexArrayAccess).ComplexArrayAccess;
invokespecial(tmp0.ComplexArrayAccess, "<init>").V;
d.ComplexArrayAccess :=.ComplexArrayAccess tmp0.ComplexArrayAccess;

   tmp1.array.i32 :=.array.i32 new(array, 5.i32).array.i32;
a.array.i32 :=.array.i32 tmp1.array.i32;

   a[0.i32].i32 :=.i32 1.i32;

   a[1.i32].i32 :=.i32 2.i32;

   a[2.i32].i32 :=.i32 3.i32;

   a[3.i32].i32 :=.i32 4.i32;

   a[4.i32].i32 :=.i32 5.i32;

   i.i32 :=.i32 1.i32;

   tmp2.i32 :=.i32 invokevirtual(d.ComplexArrayAccess, "func", 0.i32).i32;
tmp3.i32 :=.i32 a.array.i32[tmp2.i32].i32;

invokestatic(ioPlus, "printResult", tmp3.i32).V;
   tmp4.i32 :=.i32 a.array.i32[i.i32].i32;

invokestatic(ioPlus, "printResult", tmp4.i32).V;
   tmp5.i32 :=.i32 4.i32 /.i32 2.i32;
tmp6.i32 :=.i32 a.array.i32[tmp5.i32].i32;

invokestatic(ioPlus, "printResult", tmp6.i32).V;
   tmp7.i32 :=.i32 a.array.i32[2.i32].i32;
tmp8.i32 :=.i32 a.array.i32[tmp7.i32].i32;

invokestatic(ioPlus, "printResult", tmp8.i32).V;
   tmp9.i32 :=.i32 arraylength(a.array.i32).i32;
tmp10.i32 :=.i32 tmp9.i32 -.i32 1.i32;
tmp11.i32 :=.i32 a.array.i32[tmp10.i32].i32;

invokestatic(ioPlus, "printResult", tmp11.i32).V;
ret.V;
}

}