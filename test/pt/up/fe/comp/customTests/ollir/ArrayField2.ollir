import io;
import Quicksort;

CompileIntArrayExample extends Quicksort  {


.field public intArrayField.array.i32;
.field public index.i32;
.field public assignedValue.i32;

.construct CompileIntArrayExample().V {
    invokespecial(this, "<init>").V;
}

.method public setArrayElement(index.i32, value.i32).i32 {
   putfield(this, assignedValue.i32, value.i32).V;

   tmp0.array.i32 :=.array.i32 new(array, value.i32).array.i32;
putfield(this, intArrayField.array.i32, tmp0.array.i32).V;

   tmp1.array.i32 :=.array.i32 getfield(this, intArrayField.array.i32).array.i32;
tmp2.i32 :=.i32 getfield(this, assignedValue.i32).i32;
tmp1.array.i32[index.i32].i32 :=.i32 tmp2.i32;

   tmp3.array.i32 :=.array.i32 getfield(this, intArrayField.array.i32).array.i32;
tmp4.i32 :=.i32 tmp3.array.i32[index.i32].i32;
ret.i32 tmp4.i32;
}

}