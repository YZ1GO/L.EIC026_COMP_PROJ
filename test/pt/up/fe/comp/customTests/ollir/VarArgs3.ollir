VarArgsTests {




.construct VarArgsTests().V {
    invokespecial(this, "<init>").V;
}

.method public sum(numbers.array.i32).i32 {
   total.i32 :=.i32 0.i32;

   i.i32 :=.i32 0.i32;

   while0:
tmp0.i32 :=.i32 arraylength(numbers.array.i32).i32;
tmp1.bool :=.bool i.i32 <.bool tmp0.i32;
if (!.bool tmp1.bool) goto endWhile0;
tmp2.i32 :=.i32 numbers.array.i32[i.i32].i32;
tmp3.i32 :=.i32 total.i32 +.i32 tmp2.i32;
total.i32 :=.i32 tmp3.i32;
tmp4.i32 :=.i32 i.i32 +.i32 1.i32;
i.i32 :=.i32 tmp4.i32;

goto while0;
endWhile0:

   ret.i32 total.i32;
}

.method public testSingleVararg().i32 {
   tmp5.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", 42.i32).i32;
ret.i32 tmp5.i32;
}

.method public testMultipleVarargs().i32 {
   tmp6.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", 1.i32, 2.i32, 3.i32, 4.i32, 5.i32).i32;
ret.i32 tmp6.i32;
}

.method public testEmptyVarargs().i32 {
   tmp7.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum").i32;
ret.i32 tmp7.i32;
}

.method public testVarargsWithExpression().i32 {
   tmp8.i32 :=.i32 10.i32 +.i32 5.i32;
tmp9.i32 :=.i32 20.i32 *.i32 2.i32;
tmp10.i32 :=.i32 30.i32 /.i32 3.i32;
tmp11.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", tmp8.i32, tmp9.i32, tmp10.i32).i32;
ret.i32 tmp11.i32;
}

.method public testNestedVarargs().i32 {
   tmp12.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", 1.i32, 2.i32).i32;
tmp13.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", 3.i32, 4.i32).i32;
tmp14.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", tmp12.i32, tmp13.i32).i32;
ret.i32 tmp14.i32;
}

.method public testArrayToVarargs().i32 {
   tmp15.array.i32 :=.array.i32 new(array, 5.i32).array.i32;
tmp15[0.i32].i32 :=.i32 1.i32;
tmp15[1.i32].i32 :=.i32 2.i32;
tmp15[2.i32].i32 :=.i32 3.i32;
tmp15[3.i32].i32 :=.i32 4.i32;
tmp15[4.i32].i32 :=.i32 5.i32;
arr.array.i32 :=.array.i32 tmp15.array.i32;

   tmp16.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", arr.array.i32).i32;
ret.i32 tmp16.i32;
}

.method public testArrayToVarargs2().i32 {
   tmp17.array.i32 :=.array.i32 new(array, 5.i32).array.i32;
tmp17[0.i32].i32 :=.i32 1.i32;
tmp17[1.i32].i32 :=.i32 2.i32;
tmp17[2.i32].i32 :=.i32 3.i32;
tmp17[3.i32].i32 :=.i32 4.i32;
tmp17[4.i32].i32 :=.i32 5.i32;
tmp18.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", tmp17.array.i32).i32;
ret.i32 tmp18.i32;
}

.method public testArrayToVarargs3().i32 {
   tmp19.array.i32 :=.array.i32 new(array, 10.i32).array.i32;
arr.array.i32 :=.array.i32 tmp19.array.i32;

   tmp20.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", arr.array.i32).i32;
ret.i32 tmp20.i32;
}

.method public testArrayToVarargs4().i32 {
   tmp21.array.i32 :=.array.i32 new(array, 4.i32).array.i32;
tmp22.i32 :=.i32 invokevirtual(this.VarArgsTests, "sum", tmp21.array.i32).i32;
ret.i32 tmp22.i32;
}

}